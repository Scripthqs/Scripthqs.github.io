(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{494:function(t,s,a){"use strict";a.r(s);var n=a(21),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据可视化-canvas"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据可视化-canvas"}},[t._v("#")]),t._v(" 数据可视化 Canvas")]),t._v(" "),a("h2",{attrs:{id:"canvas-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#canvas-简介"}},[t._v("#")]),t._v(" Canvas 简介")]),t._v(" "),a("p",[t._v("Canvas 是 html5 新增元素，提供了很多 javaScript 绘图 API，例如绘制路径，矩形，圆，文本、图像等。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("canvas")]),t._v("标签只有 2 个属性，"),a("code",[t._v("width")]),t._v("和"),a("code",[t._v("height")]),t._v("单位默认 px，当没有设置宽高时，canvas 是默认初始化宽为 300px，高为 150px。")]),t._v(" "),a("li",[a("code",[t._v("canvas")]),t._v("必须要有结束标签，"),a("code",[t._v("<canvas></canvas>")]),t._v("，如果没有，其他内容会认为是替代内容，不会显示出来。")]),t._v(" "),a("li",[a("code",[t._v("canvas.getContext()")]),t._v(" 方法是否存在来检查浏览器是否支持 Canvas（现代浏览器基本都支持）")]),t._v(" "),a("li",[a("code",[t._v("canvas")]),t._v("没有 src 和 alt 属性。")]),t._v(" "),a("li",[a("code",[t._v("canvas")]),t._v("也可以通过 css 选择器设置 css 样式")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("canvas")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("canvas:hover")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("canvas")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tutorial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("300"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("300px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    你的浏览器不兼容Canvas,请升级您的浏览器!\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("canvas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.拿到canvas的元素对象")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" canvasEl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tutorial"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("canvasEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.拿到Canvas渲染的上下文")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ctx: CanvasRenderingContext2D")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ctx是一个绘图的上下文: 提供了绘图的指令, 可以绘制各种图形( 圆形 直线 椭圆... )")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ctx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" canvasEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2d | webgl")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br")])]),a("h2",{attrs:{id:"canvas-的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#canvas-的特点"}},[t._v("#")]),t._v(" Canvas 的特点")]),t._v(" "),a("ul",[a("li",[t._v("适合像素级处理，能够以 "),a("code",[t._v(".png")]),t._v(" 或 "),a("code",[t._v(".jpg")]),t._v(" 格式保存图像，适合对图片进行像素级的处理")]),t._v(" "),a("li",[t._v("可以做图像游戏开发")]),t._v(" "),a("li",[t._v("移动端不能过多使用，占内存")]),t._v(" "),a("li",[t._v("只能通过 js 操作")]),t._v(" "),a("li",[t._v("放大图片会模糊，颗粒化和像素化")])]),t._v(" "),a("h2",{attrs:{id:"canvas-grid-和坐标空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#canvas-grid-和坐标空间"}},[t._v("#")]),t._v(" Canvas Grid 和坐标空间")]),t._v(" "),a("p",[t._v("学习 canvas 需要了解 canvas 网络(canvas grid) 和坐标系。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("canvas width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"150"')]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"150"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("canvas"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("当新建一个"),a("code",[t._v("width:150px;height:150px")]),t._v("时，"),a("code",[t._v("canvas")]),t._v("元素会默认被网格覆盖。")]),t._v(" "),a("li",[t._v("通常来说，网格中的一个单元相当于 canvas 的一个像素。")]),t._v(" "),a("li",[t._v("网格的原点（0，0）位于坐标的左上角，所有元素都相对于该原点位置。")]),t._v(" "),a("li",[t._v("网格理解为原点在左上角的空间坐标系。")]),t._v(" "),a("li",[t._v("网格的原点可以变换，旋转、缩放，移动原点后，后续的变换都会基于新的坐标系。")])]),t._v(" "),a("h2",{attrs:{id:"canvas-绘图的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#canvas-绘图的方法"}},[t._v("#")]),t._v(" Canvas 绘图的方法")]),t._v(" "),a("p",[t._v("canvas 绘图的方式有两种：矩形方法和路径方法。")]),t._v(" "),a("ul",[a("li",[t._v("简单的图形可以使用矩形方法。")]),t._v(" "),a("li",[t._v("复杂的图形都是由路径组成。")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//绘制矩形")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fillRect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//绘制一个填充的矩形")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strokeRect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//绘制一个矩形的边框")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearRect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清除指定矩形区域，让清除部分完全透明。")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"路径-更通用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径-更通用"}},[t._v("#")]),t._v(" 路径（更通用）")]),t._v(" "),a("p",[t._v("通过路径绘制图形：")]),t._v(" "),a("ol",[a("li",[t._v("首先需要创建路径起始点（beginPath）。")]),t._v(" "),a("li",[t._v("然后使用绘图命令去画出路径( rect，arc 、moveTo、lineTo )，rect 画矩形，arc 画圆，lineTo 画线")]),t._v(" "),a("li",[t._v("之后把路径闭合( closePath , 不是必须)，看情况是否需要闭合。")]),t._v(" "),a("li",[t._v("一旦路径生成，就能通过描边(stroke)或填充路径区域(fill)来渲染图形。")])]),t._v(" "),a("h3",{attrs:{id:"绘制直线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制直线"}},[t._v("#")]),t._v(" 绘制直线")]),t._v(" "),a("ol",[a("li",[t._v("lineWidth\n"),a("ul",[a("li",[t._v("设置线条宽度的属性值必须为正数。默认值是 1px，不需单位。（ 零、负数、Infinity 和 NaN 值将被忽略）")]),t._v(" "),a("li",[t._v("路径的两边各绘制线宽的一半")])])]),t._v(" "),a("li",[t._v("moveTo(x,y)\n"),a("ul",[a("li",[t._v("moveTo 方法可以移动坐标，但是不出现绘制的途径")]),t._v(" "),a("li",[t._v("moveTo(x,y)配合 beginPath()，此时的坐标为 x,y")]),t._v(" "),a("li",[t._v("moveTo 方法可以绘制一些不连续的路径")])])]),t._v(" "),a("li",[t._v("lineTo(x,y)\n"),a("ul",[a("li",[t._v("lineTo(x,y)表示从当前位置到指定(x,y)位置的直线")]),t._v(" "),a("li",[t._v("开始的点是上次介绍的点")]),t._v(" "),a("li",[t._v("或者可以用 moveTo 指定移动点")])])])]),t._v(" "),a("h3",{attrs:{id:"绘制圆、圆弧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制圆、圆弧"}},[t._v("#")]),t._v(" 绘制圆、圆弧")]),t._v(" "),a("p",[t._v("arc(x, y, radius, startAngle, endAngle, anticlockwise)，该方法有六个参数：")]),t._v(" "),a("ul",[a("li",[t._v("x、y：圆心坐标")]),t._v(" "),a("li",[t._v("radius：圆弧半径")]),t._v(" "),a("li",[t._v("startAngle、endAngle：指定开始 和 结束的弧度。以 x 轴为基准（注意：单位是弧度，不是角度）")]),t._v(" "),a("li",[t._v("anticlockwise：为一个布尔值。true 是逆时针方向，false 是顺时针方向，默认为 false")])]),t._v(" "),a("h3",{attrs:{id:"绘制矩形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制矩形"}},[t._v("#")]),t._v(" 绘制矩形")]),t._v(" "),a("p",[t._v("除了使用 fillRect 和 strokeRect，还有"),a("code",[t._v("ctx.rect(x, y, width, height)")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ctx.rect(x, y, width, height)")]),t._v("这种方法是路径的方法，需要配合 stroke 或者 fill")]),t._v(" "),a("li",[t._v("当该方法执行的时候，"),a("code",[t._v("moveTo(x, y)")]),t._v(" 方法自动设置坐标参数（0,0）。也就是说，当前笔触自动重置回默认坐标。")])]),t._v(" "),a("h2",{attrs:{id:"色彩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#色彩"}},[t._v("#")]),t._v(" 色彩")]),t._v(" "),a("p",[t._v("绘制图形后，如果想给图形上色，需要两个重要属性")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("fillStyle = color")]),t._v("设置图形的填充颜色，需在 fill() 函数前调用")]),t._v(" "),a("li",[a("code",[t._v("strokeStyle = color")]),t._v("设置图形轮廓的颜色，需在 stroke() 函数前调用。")])]),t._v(" "),a("p",[t._v("默认情况下，线条和填充颜色都是黑色（CSS 颜色值 #000000）")]),t._v(" "),a("ul",[a("li",[t._v("一旦设置了 strokeStyle 或者 fillStyle 的值，那么这个新值就会成为新绘制的图形的默认值")]),t._v(" "),a("li",[t._v("如果要给图形上不同的颜色，需要重新设置 fillStyle 或 strokeStyle 的值")])]),t._v(" "),a("p",[t._v("注意区分：")]),t._v(" "),a("ul",[a("li",[t._v("fill() 函数是图形填充，fillStyle 属性是设置填充色，相互搭配才生效")]),t._v(" "),a("li",[t._v("stroke() 函数是图形描边，strokeStyle 属性是设置描边色，相互搭配才生效")])]),t._v(" "),a("h3",{attrs:{id:"设置透明度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置透明度"}},[t._v("#")]),t._v(" 设置透明度")]),t._v(" "),a("p",[t._v("除了可以绘制实色图形，我们还可以用 canvas 来绘制半透明的图形，有 2 种方法：")]),t._v(" "),a("ol",[a("li",[t._v("strokeStyle 和 fillStyle 属性结合 RGBA")]),t._v(" "),a("li",[t._v("globalAlpha 属性\n"),a("ul",[a("li",[t._v("globalAlpha = 0 ~ 1")]),t._v(" "),a("li",[t._v("这个属性影响到 canvas 里所有图形的透明度")]),t._v(" "),a("li",[t._v("有效的值范围是 0.0（完全透明）到 1.0（完全不透明），默认是 1.0。")])])])]),t._v(" "),a("h2",{attrs:{id:"线的样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线的样式"}},[t._v("#")]),t._v(" 线的样式")]),t._v(" "),a("ul",[a("li",[t._v("lineWidth：设置线宽")]),t._v(" "),a("li",[t._v("lineCap： 属性的值决定了线段端点显示的样子\n"),a("ul",[a("li",[t._v("butt 截断，默认是 butt。")]),t._v(" "),a("li",[t._v("round 圆形")]),t._v(" "),a("li",[t._v("square 正方形")])])]),t._v(" "),a("li",[t._v("lineJoin：属性的值决定了图形中线段连接处所显示的样子\n"),a("ul",[a("li",[t._v("miter 斜槽规，默认是 miter")]),t._v(" "),a("li",[t._v("round 圆形")]),t._v(" "),a("li",[t._v("bevel 斜角")])])])]),t._v(" "),a("h2",{attrs:{id:"绘制文本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制文本"}},[t._v("#")]),t._v(" 绘制文本")]),t._v(" "),a("p",[t._v("canvas 提供了两种方法来渲染文本：")]),t._v(" "),a("ol",[a("li",[t._v("fillText(text, x, y [, maxWidth])\n"),a("ul",[a("li",[t._v("在 (x,y) 位置，填充指定的文本")]),t._v(" "),a("li",[t._v("绘制的最大宽度（可选）。")])])]),t._v(" "),a("li",[t._v("strokeText(text, x, y [, maxWidth])\n"),a("ul",[a("li",[t._v("在 (x,y) 位置，绘制文本边框")]),t._v(" "),a("li",[t._v("绘制的最大宽度（可选）。")])])])]),t._v(" "),a("p",[t._v("文本的样式属性：")]),t._v(" "),a("ul",[a("li",[t._v("font：字体属性。默认的字体是：10px sans-serif。如果要修改，必须要有这两个属性。")]),t._v(" "),a("li",[t._v("textAlign：文本对齐属性。可选的值包括：start, end, left, right or center。默认值是 start")]),t._v(" "),a("li",[t._v("textBaseline：基线对齐。可选的值包括：top, hanging, middle, alphabetic, ideographic, bottom。默认值是 alphabetic。")])]),t._v(" "),a("h2",{attrs:{id:"绘制图片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制图片"}},[t._v("#")]),t._v(" 绘制图片")]),t._v(" "),a("p",[t._v("绘制图片，可以使用 drawImage 方法将它渲染到 canvas 里。drawImage 可以传的参数很多，常用的有：")]),t._v(" "),a("ul",[a("li",[t._v("drawImage(image, x, y, width, height)，其中 image 参数是 image 或者 canvas 对象，x 和 y 是其在目标 canvas 里的起始坐标。width 和 height，这两个参数用来控制当向 canvas 画入时应该缩放的大小。")])]),t._v(" "),a("p",[t._v("canvas 的 还有一些 API 设置图片的来源")]),t._v(" "),a("ul",[a("li",[t._v("HTMLImageElement：这些图片是由 Image()函数构造出来的，或者任何的"),a("code",[t._v("<img>")]),t._v("元素")]),t._v(" "),a("li",[t._v("HTMLVideoElement：用一个 HTML 的 "),a("code",[t._v("<video>")]),t._v("元素作为图片源，可以从视频中抓取当前帧作为一个图像")]),t._v(" "),a("li",[t._v("HTMLCanvasElement：可以使用另一个 "),a("code",[t._v("<canvas>")]),t._v(" 元素作为图片源")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" image "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这种使用比较多")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"img"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nimage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//图片加载完后有onload事件")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h2",{attrs:{id:"绘制状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制状态"}},[t._v("#")]),t._v(" 绘制状态")]),t._v(" "),a("p",[t._v("Canvas 绘画状态")]),t._v(" "),a("ul",[a("li",[t._v("是当前绘画时所产生的样式和变形的一个快照")]),t._v(" "),a("li",[t._v("Canvas 在绘画时，会产生相应的绘画状态，其实我们是可以将某些绘画的状态存储在栈中来为以后复用")]),t._v(" "),a("li",[t._v("Canvas 绘画状态的可以调用 save 和 restore 方法是用来保存和恢复，这两个方法都没有参数，并且它们是成对存在的")])]),t._v(" "),a("p",[t._v("保存和恢复（Canvas）绘画状态")]),t._v(" "),a("ul",[a("li",[t._v("save()：保存画布 (canvas) 的所有绘画状态")]),t._v(" "),a("li",[t._v("restore()：恢复画布 (canvas) 的所有绘画状态")])]),t._v(" "),a("p",[t._v("Canvas 绘画状态包括：")]),t._v(" "),a("ul",[a("li",[t._v("当前应用的变形（即移动，旋转和缩放）")]),t._v(" "),a("li",[t._v("以及一些常用属性：strokeStyle, fillStyle, globalAlpha, lineWidth, lineCap, lineJoin, miterLimit,\nshadowOffsetX, shadowOffsetY, shadowBlur, shadowColor, font, textAlign, textBaseline 等等")]),t._v(" "),a("li",[t._v("当前的裁切路径（clipping path）")])]),t._v(" "),a("h2",{attrs:{id:"形变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#形变"}},[t._v("#")]),t._v(" 形变")]),t._v(" "),a("p",[t._v("类似 CSS3 支持形变")]),t._v(" "),a("ul",[a("li",[t._v("translate(x,y)：平移")]),t._v(" "),a("li",[t._v("rotate(angle)：旋转。")]),t._v(" "),a("li",[t._v("scale(x, y)：缩放")]),t._v(" "),a("li",[t._v("transform(a, b, c, d, e, f)： 允许对变形矩阵直接修改。这个方法是将当前的变形矩阵乘上一个基于自身参数的矩阵。")])]),t._v(" "),a("p",[t._v("一般形变都配合 canvas 状态使用")]),t._v(" "),a("ul",[a("li",[t._v("形变需要在绘制图形前调用")]),t._v(" "),a("li",[t._v("在做变形之前先调用 save 方法保存状态是一个很好的习惯")]),t._v(" "),a("li",[t._v("大多数情况下，调用 restore 方法比手动恢复原先的状态要简单得多")]),t._v(" "),a("li",[t._v("如果在一个循环中做位移，但没有保存和恢复 canvas 状态，很可能到最后会发现有些东西不见了，因为它很可能已超出 canvas 画布以外了")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 保存形变之前的状态")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.形变")]),t._v("\nctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 360 -> Math.PI * 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 180 -> Math.PI")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 -> Math.PI / 180")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 45 -> Math.PI / 180 * 45")]),t._v("\nctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rotate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fillRect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("restore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 绘图结束(恢复形变之前的状态)")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("使用 save 和 restore 可以保证形变的坐标轴参照一直是原点")]),t._v(" "),a("h2",{attrs:{id:"动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动画"}},[t._v("#")]),t._v(" 动画")]),t._v(" "),a("p",[t._v("canvas 动画需要对画布上所有图形进行一帧一帧的重绘。需要使用三种方法来定期执行指定函数进行重绘。")]),t._v(" "),a("ul",[a("li",[t._v("setInterval")]),t._v(" "),a("li",[t._v("setTimeout")]),t._v(" "),a("li",[t._v("requestAnimationFrame")])]),t._v(" "),a("p",[t._v("如要画出流畅动画，1s 需绘 60 帧")]),t._v(" "),a("ol",[a("li",[t._v("用 clearRect 方法清空 canvas")]),t._v(" "),a("li",[t._v("保存 canvas 状态")]),t._v(" "),a("li",[t._v("绘制动画图形的一帧")]),t._v(" "),a("li",[t._v("恢复 canvas 状态")])]),t._v(" "),a("p",[t._v("定时器不是非常精准的，放到了宏任务中等待执行。如果有一直未处理的微任务，回调函数可能不在指定事件内触发回调。如果要更加平稳和精准，可以使用 requestAnimationFrame 函数")]),t._v(" "),a("h3",{attrs:{id:"requestanimationframe-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requestanimationframe-函数"}},[t._v("#")]),t._v(" requestAnimationFrame 函数")]),t._v(" "),a("p",[t._v("希望执行一个动画，并且要求浏览器在下次重绘之前调用该函数的回调函数来更新动画。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ctx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" canvasEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2d | webgl")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestAnimationFrame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("draw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearRect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("restore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestAnimationFrame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("draw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);