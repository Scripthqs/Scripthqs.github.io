(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{640:function(s,t,a){"use strict";a.r(t);var n=a(50),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"函数基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数基础"}},[s._v("#")]),s._v(" 函数基础")]),s._v(" "),a("p",[s._v("函数（Function）：特殊的对象，可以执行。")]),s._v(" "),a("h2",{attrs:{id:"_1、函数的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、函数的概念"}},[s._v("#")]),s._v(" 1、函数的概念")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("实现特定功能的多条语句的封装体")])]),s._v(" "),a("li",[a("p",[s._v("只有函数是可以执行的")])]),s._v(" "),a("li",[a("p",[s._v("函数也是对象")])]),s._v(" "),a("li",[a("p",[s._v("函数中可以封装一些功能（代码），在需要时可以只写这些功能和代码")])]),s._v(" "),a("li",[a("p",[s._v("可以将要封装的的代码以"),a("strong",[s._v("字符串的形式")]),s._v("传递给构造函数")])]),s._v(" "),a("li",[a("p",[s._v("封装的代码不会立即执行")])]),s._v(" "),a("li",[a("p",[s._v("函数代码会在函数调用的时候执行，")])]),s._v(" "),a("li",[a("p",[s._v("所有的函数，都是 Fuction 的“实例”（或者说是“实例对象”）。函数本质上都是通过 new Function 得到的。")])]),s._v(" "),a("li",[a("p",[s._v("函数既然是实例对象，那么，函数也属于“对象”。")])])]),s._v(" "),a("h2",{attrs:{id:"_2、创建函数对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、创建函数对象"}},[s._v("#")]),s._v(" 2、创建函数对象")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("以构造函数的方式创建函数：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("var fun = new Function();")])]),s._v(" "),a("li",[s._v("实际开发中，不会使用这种方式")])])]),s._v(" "),a("li",[a("p",[s._v("使用函数声明来创建函数：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("函数名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("形参"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("形参"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("形参"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("N")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  \n          语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("备注：语法中的中括号，表示“可选”")])])]),s._v(" "),a("li",[a("p",[s._v("函数表达式（匿名函数）")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("变量名")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("形参"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("形参"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("形参"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("N")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("fun2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"我是匿名函数中封装的代码"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"_3、函数的调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、函数的调用"}},[s._v("#")]),s._v(" 3、函数的调用")]),s._v(" "),a("ul",[a("li",[s._v("普通函数的调用，语法："),a("code",[s._v("函数();")]),s._v("或者"),a("code",[s._v("函数名.call();")]),s._v("。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("通过对象的方法来调用，如果一个函数是作为一个对象的属性保存，那么，我们称这个函数是这个对象的方法。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("\tobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("立即执行函数")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'匿名函数'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("通过构造函数来调用")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\tnew fun()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("临时将一个函数作为指定对象的方法调用")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\tfun.call/apply(obj)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("apply与call的唯一"),a("strong",[s._v("区别")]),s._v("就是："),a("strong",[s._v("调用apply方法时的参数，实参应该是以数组的形式来书写")]),s._v("。")]),s._v(" "),a("ul",[a("li",[s._v("绑定事件函数")]),s._v(" "),a("li",[s._v("定时器函数")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"_4、形参和实参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、形参和实参"}},[s._v("#")]),s._v(" 4、形参和实参")]),s._v(" "),a("p",[s._v("形参：")]),s._v(" "),a("ul",[a("li",[s._v("形式上的参数。定义函数时传递的参数，当时并不知道是什么值。")]),s._v(" "),a("li",[s._v("定义函数时，可以在函数的()中来指定一个或多个形参。")]),s._v(" "),a("li",[s._v("多个形参之间使用,隔开，声明形参就相当于在函数内部声明了对应的变量，但是并不赋值。")])]),s._v(" "),a("p",[s._v("实参：")]),s._v(" "),a("ul",[a("li",[s._v("概念：实际上的参数。调用函数时传递的参数，实参将会传递给函数中对应的形参。")]),s._v(" "),a("li",[s._v("在调用函数时，可以在函数的 ()中指定实参。")]),s._v(" "),a("li",[s._v("实际参数和形式参数的个数，一般要相同。")]),s._v(" "),a("li",[s._v("如果实参的数量少于形参的数量，多余的形参会被定义为 "),a("code",[s._v("undefined")])]),s._v(" "),a("li",[s._v("如果实参的数量多余形参的数量，多余实参不会被赋值。")]),s._v(" "),a("li",[s._v("实参可以是任意数据类型，当需要传递的实参过多时，可以封装到对象中传递。")])]),s._v(" "),a("p",[s._v("在 JS 中，形参的默认值是 "),a("code",[s._v("undefined")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"_5、函数的返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、函数的返回值"}},[s._v("#")]),s._v(" 5、函数的返回值")]),s._v(" "),a("ul",[a("li",[s._v("可以使用return来设置函数的返回值，语法："),a("code",[s._v("return 值;")])]),s._v(" "),a("li",[a("code",[s._v("return")]),s._v("后的值将作为函数的执行结果返回")]),s._v(" "),a("li",[s._v("定义一个变量来接收该结果")]),s._v(" "),a("li",[s._v("在函数中，"),a("code",[s._v("return")]),s._v("后的语句都不再执行")]),s._v(" "),a("li",[s._v("如果函数中不写return或者return后面不写值，都返回"),a("code",[s._v("undefined")])]),s._v(" "),a("li",[s._v("返回值可以是任意的数据类型")]),s._v(" "),a("li",[a("code",[s._v("return")]),s._v(" 只能返回一个值。如果用逗号隔开多个值，则以最后一个为准")]),s._v(" "),a("li",[s._v("fn代表的是整个函数，而fn()代表的是返回值。")])]),s._v(" "),a("h2",{attrs:{id:"_6、作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、作用域"}},[s._v("#")]),s._v(" 6、作用域")]),s._v(" "),a("p",[s._v("作用域指一个变量作用的范围，在JS中有两种作用域：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("全局作用域")]),s._v(" "),a("ul",[a("li",[s._v("直接编写到script标签中的JS代码，都在全局作用域")]),s._v(" "),a("li",[s._v("全局作用域在页面打开时创建，关闭时销毁")]),s._v(" "),a("li",[s._v("在全局作用域中有一个全局对象window，代表浏览器的窗口，由浏览器创建，我们可以直接使用")]),s._v(" "),a("li",[s._v("在全局作用域中，我们创建的变量都会作为window对象的属性保存")]),s._v(" "),a("li",[s._v("创建的函数会作为window对象的方法保存")]),s._v(" "),a("li",[s._v("全局作用域中的变量都是全局变量，在页面的任意部分都可以访问")])])]),s._v(" "),a("li",[a("p",[s._v("函数作用域")]),s._v(" "),a("ul",[a("li",[s._v("调用函数时创建函数作用域，函数执行完毕后，函数作用域销毁")]),s._v(" "),a("li",[s._v("每调用一次函数就会创建一个新的作用域，他们是相互独立的")]),s._v(" "),a("li",[s._v("在函数作用域中可以访问到全局作用域的变量")]),s._v(" "),a("li",[s._v("全局作用域无法访问到函数作用域的变量")]),s._v(" "),a("li",[s._v("当在函数作用域中操作变量时，会先在自身作用域中寻找，有就直接使用，没有则向上一级作用域寻找。直到全局作用域，没找到就报错")]),s._v(" "),a("li",[s._v("在函数中访问全局的变量可以使用window对象")]),s._v(" "),a("li",[s._v("在函数作用域中也有声明提前，使用var和function都会声明提前")]),s._v(" "),a("li",[s._v("在函数作用域中不使用var声明的变量都会称为全局变量")]),s._v(" "),a("li",[s._v("定义形参相当于在函数作用域中声明了变量")])])])]),s._v(" "),a("h2",{attrs:{id:"_7、变量的声明提前"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、变量的声明提前"}},[s._v("#")]),s._v(" 7、变量的声明提前")]),s._v(" "),a("p",[s._v("使用var关键字声明的变量，会在所有的代码执行前被声明（但是不会被赋值）。但是如果声明变量时不使用var关键字，变量不会声明提前。")]),s._v(" "),a("p",[s._v("函数的声明提前")]),s._v(" "),a("ul",[a("li",[s._v("使用函数声明创建的函数"),a("code",[s._v("function fun(){}")]),s._v("，会在所有的代码执行之前就被创建，我们可以在函数声明前调用函数。")]),s._v(" "),a("li",[s._v("使用函数表达式创建的函数"),a("code",[s._v("var fun = function(){}")]),s._v("不会声明提前")])]),s._v(" "),a("h2",{attrs:{id:"_8、this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、this"}},[s._v("#")]),s._v(" 8、this")]),s._v(" "),a("p",[s._v("解析器（浏览器）在调用函数时，每次都会向函数内部传递进一个隐含的参数，这个隐含的的参数就是this。")]),s._v(" "),a("ul",[a("li",[s._v("this指向一个对象，这个对象我们称为函数的执行上下文对象")]),s._v(" "),a("li",[s._v("根据函数的调用的方式不同，this会指向不同的对象")]),s._v(" "),a("li",[s._v("以函数的形式调用时，this永远都是window")]),s._v(" "),a("li",[s._v("以方法的形式调用时，this就是调用这个方法的对象")]),s._v(" "),a("li",[s._v("以构造函数的形式调用时，this就是实例，即"),a("code",[s._v("var per = new Penson();")]),s._v("的"),a("code",[s._v("per")])]),s._v(" "),a("li",[s._v("以call()和apply()调用时，this是指定的那个对象，即"),a("code",[s._v("fun.call(obj1)和fun.apply(obj2);")]),s._v("中的obj1和obj2")]),s._v(" "),a("li",[s._v("在事件的响应函数中，响应函数是给谁绑定的，this就是谁，即"),a("code",[s._v("btn.onclick = function () {console.log(this);}")]),s._v("，此时，this是btn")])]),s._v(" "),a("h2",{attrs:{id:"_9、arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、arguments"}},[s._v("#")]),s._v(" 9、arguments")]),s._v(" "),a("p",[s._v("调用函数时的隐含参数除了this还有arguments")]),s._v(" "),a("ul",[a("li",[s._v("arguments是封装实参的对象")]),s._v(" "),a("li",[s._v("是一个类数组对象，它也可以通过索引操作数据，获取长度")]),s._v(" "),a("li",[s._v("在调用函数时，我们所传递的实参都会在arguments中保存")]),s._v(" "),a("li",[s._v("arguments.length可以获取实参的长度")]),s._v(" "),a("li",[s._v("我们即使不定义形参，也可以通过arguments来使用实参")]),s._v(" "),a("li",[a("code",[s._v("arguments[0]、arguments[1]")]),s._v("分别表示第一个，第二个实参")]),s._v(" "),a("li",[a("code",[s._v("arguments.callee")]),s._v("这个属性对应一个函数对象，就是当前正在指向的函数的对象")]),s._v(" "),a("li",[a("code",[s._v("arguments.callee ===fun // true")])])]),s._v(" "),a("h2",{attrs:{id:"_10、工厂模式创建对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10、工厂模式创建对象"}},[s._v("#")]),s._v(" 10、工厂模式创建对象")]),s._v(" "),a("p",[s._v("使用工厂方法创建对象，通过该方法可以大批量创建对象.")]),s._v(" "),a("ul",[a("li",[s._v("创建一个函数")]),s._v(" "),a("li",[s._v("函数里创建一个新的对象")]),s._v(" "),a("li",[s._v("对象里添加属性")]),s._v(" "),a("li",[s._v("将新的对象通过return作为函数值返回")]),s._v(" "),a("li",[s._v("从外面传递参数")])]),s._v(" "),a("p",[s._v("这种方法使用的构造函数都是Object，所以创建的对象都是Object这个类型，就导致我们无法区分多种不同类型的对象。")]),s._v(" "),a("h2",{attrs:{id:"_11、构造函数创建对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11、构造函数创建对象"}},[s._v("#")]),s._v(" 11、构造函数创建对象")]),s._v(" "),a("ul",[a("li",[s._v("创建一个构造函数，专门创建Person对象（Penson类）")]),s._v(" "),a("li",[s._v("构造函数就是一个普通的函数，创建方式和普通函数没什么区别")]),s._v(" "),a("li",[s._v("不同的是构造函数习惯首字母大写")]),s._v(" "),a("li",[s._v("构造函数和普通函数的区别就是调用的方式不同")]),s._v(" "),a("li",[s._v("普通函数直接调用，构造函数需要使用new关键字调用"),a("code",[s._v("var per = new Penson;")])]),s._v(" "),a("li",[s._v("使用同一类构造函数创建的对象，我们称为一类对象，也将一个构造函数称为一个类（Person类），创建的对象称为该类的实例，或者该构造函数的实例。"),a("code",[s._v("per是Person类的实例")])])]),s._v(" "),a("p",[s._v("构造函数的执行流程：")]),s._v(" "),a("ul",[a("li",[s._v("立即创建一个新的对象")]),s._v(" "),a("li",[s._v("将新建的对象设置为函数的this，在构造函数中可以使用this来引用新建的对象")]),s._v(" "),a("li",[s._v("逐行执行函数中的代码")]),s._v(" "),a("li",[s._v("将新建的对象作为返回值返回")])]),s._v(" "),a("p",[s._v("通过instanceof可以检查一个对象是否是一个类的实例")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("对象 instanceof 构造函数")])]),s._v(" "),a("li",[s._v("是则返回true，不是则返回false")])]),s._v(" "),a("p",[s._v("所有的对象都是Object构造函数的实例")]),s._v(" "),a("p",[s._v("将函数定义在全局作用域中，会污染全局作用域的命名空间，也很不安全。")]),s._v(" "),a("p",[s._v("JavaScript 的构造函数中可以添加一些成员，可以在构造函数本身上添加，也可以在构造函数内部的 this 上添加。通过这两种方式添加的成员，就分别称为静态成员和实例成员。")]),s._v(" "),a("ul",[a("li",[s._v("静态成员：在构造函数本上添加的成员称为静态成员，只能由构造函数本身来访问。")]),s._v(" "),a("li",[s._v("实例成员：在构造函数内部创建的对象成员称为实例成员，只能由实例化的对象来访问。")])]),s._v(" "),a("h2",{attrs:{id:"_12、高阶函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12、高阶函数"}},[s._v("#")]),s._v(" 12、高阶函数")]),s._v(" "),a("p",[s._v("当函数A接收函数B作为参数，或者把函数C作为返回值输出时，我们称函数A为高阶函数。高阶函数是对其他函数进行操作的函数。")]),s._v(" "),a("ul",[a("li",[s._v("把其他函数作为参数")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            f "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'我是一个函数'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[s._v("把其他函数作为返回值")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("变量a是函数内的局部变量，所以外部无法访问。")]),s._v(" "),a("h2",{attrs:{id:"_13、闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13、闭包"}},[s._v("#")]),s._v(" 13、闭包")]),s._v(" "),a("ul",[a("li",[s._v("有权访问另一个函数作用域中变量的函数称为闭包。")]),s._v(" "),a("li",[s._v("闭包是一种函数，闭包是一种现象。")]),s._v(" "),a("li",[s._v("这个作用域可以访问另一个函数内部的局部变量，就产生了闭包（这时理解为一种现象），另外那个作用域所在的函数称之为闭包函数。")]),s._v(" "),a("li",[s._v("强调的是访问局部变量")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在 chrome 浏览器控制台中，设置断点，可以调试闭包Closure")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ul",[a("li",[s._v("函数fn2的作用域访问了fn1中的局部变量，此时，fn1中就产生了闭包，fn1称之为闭包函数。")]),s._v(" "),a("li",[s._v("一般来说，在 fn1 函数执行完毕后，它里面的变量 a 会立即销毁")]),s._v(" "),a("li",[s._v("由于产生了闭包，所以 fn1 函数中的变量 a 不会立即销毁，因为 fn2 函数还要继续调用变量 a")]),s._v(" "),a("li",[s._v("只有等所有函数把变量 a 调用完了，变量 a 才会销毁。")]),s._v(" "),a("li",[s._v("闭包的主要作用就是：延伸了变量的作用范围。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);