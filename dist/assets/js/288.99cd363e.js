(window.webpackJsonp=window.webpackJsonp||[]).push([[288],{760:function(v,_,t){"use strict";t.r(_);var l=t(21),s=Object(l.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[v._v("#")]),v._v(" 数据类型")]),v._v(" "),t("h2",{attrs:{id:"js-数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js-数据类型"}},[v._v("#")]),v._v(" js 数据类型")]),v._v(" "),t("p",[v._v("截至到 2021 年，已经有 8 种数据类型。7 种原始数据类型（值类型），1 种引用数据类型（引用类型）。")]),v._v(" "),t("ul",[t("li",[t("strong",[t("code",[v._v("String")]),v._v(" 字符串")])]),v._v(" "),t("li",[t("strong",[t("code",[v._v("Number")]),v._v(" 数值")])]),v._v(" "),t("li",[t("strong",[t("code",[v._v("Boolean")]),v._v(" 布尔值")])]),v._v(" "),t("li",[t("strong",[t("code",[v._v("Null")]),v._v(" 空值")])]),v._v(" "),t("li",[t("strong",[t("code",[v._v("Undefined")]),v._v(" 未定义")])]),v._v(" "),t("li",[t("strong",[t("code",[v._v("Symbol")]),v._v(" (ES6) 独一无二的值类型。")])]),v._v(" "),t("li",[t("strong",[t("code",[v._v("BigInt")]),v._v(" (ES10) 大整数基本类型。")])])]),v._v(" "),t("p",[v._v("原始数据类型和引用数据类型两种类型的区别在于"),t("strong",[v._v("存储位置的不同")])]),v._v(" "),t("ul",[t("li",[v._v("原始数据类型直接存储在栈（stack）中")]),v._v(" "),t("li",[v._v("引用数据类型存储在堆（heap）中的对象，引用数据类型在"),t("strong",[v._v("栈中存储了指针")]),v._v("，该"),t("strong",[v._v("指针指向")]),v._v("堆中该实体的"),t("strong",[v._v("起始地址")]),v._v("。当解释器寻找引用值时，会首先检索其在栈中的地址，取得地址后从堆中获得实体。")])]),v._v(" "),t("h2",{attrs:{id:"js-内存管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js-内存管理"}},[v._v("#")]),v._v(" js 内存管理")]),v._v(" "),t("p",[v._v("任何编程语言，在代码的执行过程中都是需要给它分配内存的。")]),v._v(" "),t("ul",[t("li",[v._v("某些编程语言需要我们自己手动的管理内存(C 、C++)")]),v._v(" "),t("li",[v._v("某些编程语言会可以自动帮助我们管理内存(Java、Js、Python)")])]),v._v(" "),t("p",[v._v("内存的管理都会有如下的生命周期：")]),v._v(" "),t("ol",[t("li",[v._v("申请，分配申请需要的内存")]),v._v(" "),t("li",[v._v("使用，使用分配的内存，存放一些东西，比如对象等")]),v._v(" "),t("li",[v._v("释放，不需要使用时，对其进行释放")])]),v._v(" "),t("h2",{attrs:{id:"堆和栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#堆和栈"}},[v._v("#")]),v._v(" 堆和栈")]),v._v(" "),t("p",[v._v("堆和栈的概念存在于"),t("strong",[v._v("数据结构")]),v._v("和"),t("strong",[v._v("操作系统内存")]),v._v("中。")]),v._v(" "),t("p",[v._v("在数据结构中：")]),v._v(" "),t("ul",[t("li",[v._v("在数据结构中，栈中数据的存取方式为先进后出。")]),v._v(" "),t("li",[v._v("堆是一个优先队列，是按优先级来进行排序的，优先级可以按照大小来规定。")])]),v._v(" "),t("p",[v._v("在操作系统中：")]),v._v(" "),t("ul",[t("li",[v._v("内存被分为栈区和堆区")]),v._v(" "),t("li",[v._v("栈区内存由编译器自动分配释放，"),t("strong",[v._v("js 所有的变量都存在栈内存中")])]),v._v(" "),t("li",[v._v("堆区内存一般由开发者分配释放，若开发者不释放，程序结束时可能由垃圾回收机制回收。")])]),v._v(" "),t("h2",{attrs:{id:"数据类型检测"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型检测"}},[v._v("#")]),v._v(" 数据类型检测")]),v._v(" "),t("p",[t("strong",[v._v("（1）typeof")])]),v._v(" "),t("p",[v._v("数组、对象、null 都会被判断为 object，其他判断都正确。")]),v._v(" "),t("p",[t("strong",[v._v("（2）instanceof")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("可以正确判断对象的类型，"),t("strong",[v._v("其内部运行机制是判断在其原型链中能否找到该类型的原型")]),v._v("。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("只能正确判断引用数据类型")]),v._v("，而不能判断基本数据类型。")])])]),v._v(" "),t("p",[t("strong",[v._v("（3）===")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("===")]),v._v(" 可以判断 undefined、null")]),v._v(" "),t("li",[v._v("数量类型判断不要使用"),t("code",[v._v("==")]),v._v("，因为它有可能会做数据类型转换。")])]),v._v(" "),t("p",[v._v("（4）"),t("strong",[v._v("Object.prototype.toString.call()")])]),v._v(" "),t("ul",[t("li",[v._v("使用 Object 对象的原型方法 toString 来判断数据类型")]),v._v(" "),t("li",[v._v("这个方法很准确的判断各种类型")])]),v._v(" "),t("h2",{attrs:{id:"undefined-与-null"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#undefined-与-null"}},[v._v("#")]),v._v(" undefined 与 null")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("undefined 代表变量没有赋值")])]),v._v(" "),t("li",[t("p",[v._v("null: 代表变量赋值了, 只是值为 null，表示"),t("strong",[v._v("空对象")])])])]),v._v(" "),t("p",[t("strong",[v._v("什么时候将变量赋值为 null?")])]),v._v(" "),t("ul",[t("li",[v._v("初始化赋值: 将要作为引用变量使用, 但对象还没有确定")]),v._v(" "),t("li",[v._v("结束时: 将变量指向的对象成为垃圾对象")])]),v._v(" "),t("p",[v._v("typeof null 返回一个对象")]),v._v(" "),t("h2",{attrs:{id:"js-变量类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js-变量类型"}},[v._v("#")]),v._v(" js 变量类型")]),v._v(" "),t("p",[v._v("js 的变量本身是没有类型的, 变量的类型实际上是变量内存中数据的类型 。")]),v._v(" "),t("p",[t("strong",[v._v("变量类型")])]),v._v(" "),t("ul",[t("li",[v._v("基本类型: 保存基本类型数据的变量")]),v._v(" "),t("li",[v._v("引用类型: 保存对象地址值的变量")])])])}),[],!1,null,null,null);_.default=s.exports}}]);