(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{559:function(s,t,a){"use strict";a.r(t);var e=a(50),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"接口设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接口设计"}},[s._v("#")]),s._v(" 接口设计")]),s._v(" "),a("h2",{attrs:{id:"接口安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接口安全"}},[s._v("#")]),s._v(" 接口安全")]),s._v(" "),a("p",[s._v("前后端分离式开发需要进行数据交互，传输的数据被偷窥、被抓包、被伪造时有发生，那么如何设计一套比较安全的API接口方案呢？")]),s._v(" "),a("blockquote",[a("p",[s._v("并不是所有的接口都需要考虑安全的，有些接口是公开的，任何人只要知道地址都可以调用，对于一些项目中需要用户登录才能访问的接口才需要考虑安全问题。")])]),s._v(" "),a("p",[s._v("一般解决的方案有以下几类：")]),s._v(" "),a("ul",[a("li",[s._v("token令牌认证（jwt）")]),s._v(" "),a("li",[s._v("AK（app key）&SK（secret key）【用户名&密码】")]),s._v(" "),a("li",[s._v("时间戳超时验证+签名算法字符串")]),s._v(" "),a("li",[s._v("URL签名（算法，非对称算法）")]),s._v(" "),a("li",[s._v("数据脱敏（防范数据库数据泄露）")]),s._v(" "),a("li",[s._v("HTTPS\n"),a("ul",[a("li",[s._v("数字证书（防运营商）")])])]),s._v(" "),a("li",[s._v("IP黑/白名单（服务器层面的限制，apache、nginx）")]),s._v(" "),a("li",[s._v("oAuth2.0")])]),s._v(" "),a("blockquote",[a("p",[s._v("关于"),a("code",[s._v("JWT")]),s._v("：")])]),s._v(" "),a("p",[s._v("Json web token（JWT），是基于token的鉴权机制，类似于http协议也是无状态的，它不需要在服务端去保留用户的认证信息或者会话信息，为应用的扩展提供了便利。JWT具备以下几个优点：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("因json的通用性，所以JWT是可以进行跨语言")])]),s._v(" "),a("li",[a("p",[s._v("JWT可以在自身存储一些其他业务逻辑所必要的"),a("strong",[s._v("非敏感")]),s._v("信息")])]),s._v(" "),a("li",[a("p",[s._v("便于传输，jwt的构成非常简单，字节占用很小，所以它是非常便于传输的")])]),s._v(" "),a("li",[a("p",[s._v("它不需要在服务端保存会话信息，所以它非常适合应用在前后端分离的项目上")])])]),s._v(" "),a("p",[s._v("使用JWT进行鉴权的工作流程如下（重点）：")]),s._v(" "),a("ul",[a("li",[s._v("用户使用用户名密码来请求服务器")]),s._v(" "),a("li",[s._v("服务器进行验证用户的信息（查数据库）")]),s._v(" "),a("li",[s._v("服务器通过验证发送给用户一个token（令牌）")]),s._v(" "),a("li",[s._v("客户端存储token（Vuex+localStorage），并在每次请求时附送上这个token值")]),s._v(" "),a("li",[s._v("服务端验证token值，并返回数据")])]),s._v(" "),a("p",[a("img",{attrs:{src:"D:%5Cuser%5CDesktop%5Cscripthqs%5Cassets%5Cnode%5CJWT.png",alt:"JWT"}})]),s._v(" "),a("p",[s._v("JWT是由三段信息构成的（头部、载荷、签名），将这三部分使用"),a("code",[s._v(".")]),s._v("连接在一起就组成了JWT字符串，形如：")]),s._v(" "),a("div",{staticClass:"language-jwt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImp0aSI6IjNmMmc1N2E5MmFhIn0.eyJpYXQiOjE1NTk1Mjk1MjksImlzcyI6Imh0dHA6XC9cL3d3dy5weWcuY29tIiwiYXVkIjoiaHR0cDpcL1wvd3d3LnB5Zy5jb20iLCJuYmYiOjE1NTk1Mjk1MjgsImV4cCI6MTU1OTUzMzEyOSwianRpIjoiM2YyZzU3YTkyYWEiLCJ1c2VyX2lkIjoxfQ.4BaThL6_TbIMBGLIWZgpnoDQ-JlAjzbiK3y3BcvNiGI\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("其中：")]),s._v(" "),a("ul",[a("li",[s._v("头部（header），包含了两（可以更多）部分信息，分别是类型的声明和所使用的加密算法。")])]),s._v(" "),a("p",[s._v("一个完整的头部就像下面的JSON：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{\n  'typ': 'JWT',\n  'alg': 'HS256'\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("然后将头部进行base64加密/编码（该加密是可以对称解密的)，这就得到了jwt的第一部分。")]),s._v(" "),a("ul",[a("li",[s._v("载荷（payload）（body），载荷就是存放有效信息的地方。这些有效信息包含三个部分\n"),a("ul",[a("li",[s._v("标准中约定声明（建议但不强制）\n"),a("ul",[a("li",[s._v("签发人")]),s._v(" "),a("li",[s._v("使用者")]),s._v(" "),a("li",[s._v("签发时间")]),s._v(" "),a("li",[s._v("有效期")]),s._v(" "),a("li",[s._v("....")])])]),s._v(" "),a("li",[s._v("公共的声明")]),s._v(" "),a("li",[s._v("私有的声明")])])])]),s._v(" "),a("p",[s._v("定义一个payload：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "sub": "1234567890",\n  "name": "John Doe",\n  "admin": true\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("依旧进行base64加密，这就得到了jwt的第二部分。")]),s._v(" "),a("ul",[a("li",[s._v("签名（signature），这个签证信息由三部分组成：\n"),a("ul",[a("li",[s._v("经过base64编码后的\n"),a("ul",[a("li",[s._v("header")]),s._v(" "),a("li",[s._v("payload")])])]),s._v(" "),a("li",[a("strong",[s._v("secret（就是一个字符串，自己定义，值是什么无所谓）")])])])])]),s._v(" "),a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" encodedString "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("base64UrlEncode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("base64UrlEncode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" signature "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HMACSHA256")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("encodedString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'secret'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这样就得到了jwt的第三部分。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" jwt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" encodedString "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("base64UrlEncode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("signature"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("最终将三部分信息通过"),a("code",[s._v(".")]),s._v("进行连接就得到了最终的jwt字符串。后续不需要自己去写jwt怎么生成的。因此，此流程理解即可。")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("需要注意的是")])]),s._v(" "),a("ul",[a("li",[s._v("secret是保存在服务器端的")]),s._v(" "),a("li",[s._v("jwt的签发生成也是在服务器端的")]),s._v(" "),a("li",[s._v("secret是用来进行jwt的"),a("strong",[s._v("签发")]),s._v("和jwt的"),a("strong",[s._v("验证")])])]),s._v(" "),a("p",[s._v("所以，secret它就是服务端的私钥，在任何场景都不应该泄露出去。一旦其他人（包括客户端的用户）得知这个secret，那就意味着他们可以自我签发jwt，接口就没有安全性可言了。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);