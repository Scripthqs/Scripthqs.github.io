(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{507:function(t,e,r){"use strict";r.r(e);var s=r(21),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"react-组件通信"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react-组件通信"}},[t._v("#")]),t._v(" React 组件通信")]),t._v(" "),r("p",[t._v("通常来说，一个应用会存在多个嵌套关系的组件。")]),t._v(" "),r("h2",{attrs:{id:"父组件传递给子组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#父组件传递给子组件"}},[t._v("#")]),t._v(" 父组件传递给子组件")]),t._v(" "),r("ul",[r("li",[t._v("父组件通过 "),r("code",[t._v("属性=值")]),t._v(" 的形式传递给子组件数据")]),t._v(" "),r("li",[t._v("子组件通过 props 参数获取父组件传递过来的数据")])]),t._v(" "),r("h2",{attrs:{id:"propstypes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#propstypes"}},[t._v("#")]),t._v(" propsTypes")]),t._v(" "),r("p",[t._v("对传递给子组件的数据，希望进行验证")]),t._v(" "),r("ul",[r("li",[t._v("如果项目继承了 Flow 或者 TypeScript，那么可以直接进行类型验证")]),t._v(" "),r("li",[t._v("通过 Prop-type 库进行参数验证")])]),t._v(" "),r("p",[t._v("从 React v15.5 后，React.PropTypes 已移入另一个包中：prop-types 库")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://react.docschina.org/docs/typechecking-with-proptypes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://react.docschina.org/docs/typechecking-with-proptypes.html"),r("OutboundLink")],1)]),t._v(" "),r("h2",{attrs:{id:"子组件传递给父组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#子组件传递给父组件"}},[t._v("#")]),t._v(" 子组件传递给父组件")]),t._v(" "),r("ul",[r("li",[t._v("vue 是通过自定义事件完成的")]),t._v(" "),r("li",[t._v("React 同样是通过 props 传递信息，只是让父组件给子组件传递一个回调函数，在子组件调用这个函数就可以")])])])}),[],!1,null,null,null);e.default=a.exports}}]);