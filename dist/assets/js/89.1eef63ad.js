(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{545:function(t,v,_){"use strict";_.r(v);var r=_(21),e=Object(r.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"vue-生命周期"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-生命周期"}},[t._v("#")]),t._v(" Vue 生命周期")]),t._v(" "),_("h2",{attrs:{id:"生命周期和生命周期函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#生命周期和生命周期函数"}},[t._v("#")]),t._v(" 生命周期和生命周期函数")]),t._v(" "),_("p",[_("strong",[t._v("生命周期")]),t._v("（Life Cycle）是指一个组件从"),_("strong",[t._v("创建 -> 运行 -> 销毁")]),t._v("的整个阶段，强调的是一个时间段。")]),t._v(" "),_("p",[_("strong",[t._v("生命周期函数")]),t._v("：是由 vue 框架提供的"),_("strong",[t._v("内置函数")]),t._v("，会伴随着组件的生命周期，"),_("strong",[t._v("自动按次序执行")])]),t._v(" "),_("p",[t._v("注意："),_("strong",[t._v("生命周期")]),t._v("强调的是"),_("strong",[t._v("时间段")]),t._v("，"),_("strong",[t._v("生命周期函数")]),t._v("强调的是"),_("strong",[t._v("时间点")]),t._v("。")]),t._v(" "),_("p",[_("code",[t._v("hook")]),t._v("钩子，生命周期函数又称为钩子函数。")]),t._v(" "),_("h2",{attrs:{id:"组件生命周期函数的分类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#组件生命周期函数的分类"}},[t._v("#")]),t._v(" 组件生命周期函数的分类")]),t._v(" "),_("p",[t._v("组件生命周期有 3 个阶段：")]),t._v(" "),_("p",[_("strong",[t._v("组件创建阶段：")])]),t._v(" "),_("ol",[_("li",[t._v("beforeCreate 创建前，")]),t._v(" "),_("li",[t._v("created 创建后")]),t._v(" "),_("li",[t._v("beforeMount 挂载前")]),t._v(" "),_("li",[t._v("mounted 挂载后")])]),t._v(" "),_("p",[_("strong",[t._v("组件运行阶段")]),t._v("：")]),t._v(" "),_("ol",[_("li",[t._v("beforeUpdate 数据更新前")]),t._v(" "),_("li",[t._v("updated 数据更新后")])]),t._v(" "),_("p",[_("strong",[t._v("组件销毁阶段")]),t._v("：")]),t._v(" "),_("ol",[_("li",[t._v("beforeDestroy 销毁前")]),t._v(" "),_("li",[t._v("destroyed 销毁后")])]),t._v(" "),_("h2",{attrs:{id:"beforecreate"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#beforecreate"}},[t._v("#")]),t._v(" beforeCreate")]),t._v(" "),_("ol",[_("li",[t._v("初始化"),_("strong",[t._v("事件")]),t._v("和"),_("strong",[t._v("生命周期函数")])]),t._v(" "),_("li",[_("strong",[t._v("props/data/methods")]),t._v("尚未被创建，都处于"),_("strong",[t._v("不可用")]),t._v("的状态")])]),t._v(" "),_("h2",{attrs:{id:"created"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#created"}},[t._v("#")]),t._v(" "),_("strong",[t._v("created")])]),t._v(" "),_("ol",[_("li",[t._v("初始化"),_("strong",[t._v("props/data/methods")])]),t._v(" "),_("li",[t._v("组件中的"),_("strong",[t._v("props/data/methods")]),t._v("已创建好，都处于"),_("strong",[t._v("可用")]),t._v("的状态，但是组件的"),_("strong",[t._v("模板结构尚未生成")]),t._v("，"),_("strong",[t._v("不能操作 DOM")])])]),t._v(" "),_("p",[t._v("注意："),_("strong",[t._v("在开发中，这个函数中，可以发起 ajax 请求，获取数据")]),t._v("。")]),t._v(" "),_("h2",{attrs:{id:"beforemount"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#beforemount"}},[t._v("#")]),t._v(" beforeMount")]),t._v(" "),_("p",[_("strong",[t._v("将要把")]),t._v("内存中编译好的"),_("strong",[t._v("HTML")]),t._v("结构"),_("strong",[t._v("渲染到")]),t._v("浏览器中，此时浏览器中"),_("strong",[t._v("还没有")]),t._v("当前组件的 DOM 结构。"),_("strong",[t._v("不能操作 DOM")])]),t._v(" "),_("h2",{attrs:{id:"mounted"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mounted"}},[t._v("#")]),t._v(" "),_("strong",[t._v("mounted")])]),t._v(" "),_("p",[t._v("已经把内存中的 HTML 结构，成功的渲染到浏览器中，此时浏览器的中"),_("strong",[t._v("已然包含")]),t._v("了当前组件的 DOM 结构，"),_("strong",[t._v("可以操作 DOM")])]),t._v(" "),_("h2",{attrs:{id:"beforeupdate"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#beforeupdate"}},[t._v("#")]),t._v(" beforeUpdate")]),t._v(" "),_("p",[_("strong",[t._v("将要")]),t._v("根据变化之后，最新的数据，"),_("strong",[t._v("重新渲染")]),t._v("组件中的模板结构，")]),t._v(" "),_("p",[_("strong",[t._v("data 数据是最新的，DOM 结构还是旧的")]),t._v("。")]),t._v(" "),_("h2",{attrs:{id:"updated"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#updated"}},[t._v("#")]),t._v(" updated")]),t._v(" "),_("p",[t._v("已经根据最新的数据，"),_("strong",[t._v("完成了")]),t._v("组件 DOM 结构的"),_("strong",[t._v("重新渲染")]),t._v("。")]),t._v(" "),_("p",[_("strong",[t._v("data 数据是最新的，DOM 结构也是最新的")]),t._v("。")]),t._v(" "),_("h2",{attrs:{id:"beforedestroy"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#beforedestroy"}},[t._v("#")]),t._v(" beforeDestroy")]),t._v(" "),_("p",[_("strong",[t._v("将要销毁")]),t._v("此组件，此时"),_("strong",[t._v("尚未销毁")]),t._v("，组件还处于"),_("strong",[t._v("正常工作")]),t._v("的状态")]),t._v(" "),_("h2",{attrs:{id:"destroyed"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#destroyed"}},[t._v("#")]),t._v(" destroyed")]),t._v(" "),_("p",[t._v("组件已经被销毁，此组件在浏览器中对应的"),_("strong",[t._v("DOM 结构")]),t._v("已经被"),_("strong",[t._v("完全移除")]),t._v("。")]),t._v(" "),_("p",[_("strong",[t._v("清除定时器、解绑事件监听器，清空数据等")]),t._v("。")])])}),[],!1,null,null,null);v.default=e.exports}}]);