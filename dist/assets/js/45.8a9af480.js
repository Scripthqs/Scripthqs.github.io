(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{502:function(s,t,a){"use strict";a.r(t);var n=a(21),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"jsx-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx-简介"}},[s._v("#")]),s._v(" JSX 简介")]),s._v(" "),a("p",[s._v("JSX 是一种 JavaScript 的语法扩展（eXtension），也在很多地方称之为 JavaScript XML，因为看起就是一段 XML 语法。")]),s._v(" "),a("ul",[a("li",[s._v("用于描述我们的 UI 界面，并且其完成可以和 JavaScript 融合在一起使用")]),s._v(" "),a("li",[s._v("不同于 Vue 中的模块语法，不需要专门学习模块语法中的一些指令（比如 v-for、v-if、v-else、v-bind）")])]),s._v(" "),a("p",[s._v("React 认为渲染逻辑本质上与其他 UI 逻辑存在内在耦合，所以选择 JSX。")]),s._v(" "),a("h2",{attrs:{id:"jsx-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx-规范"}},[s._v("#")]),s._v(" JSX 规范")]),s._v(" "),a("ol",[a("li",[s._v("JSX 的顶层只能有一个根元素，所以很多时候会在外层包裹一个 div 元素")]),s._v(" "),a("li",[s._v("在 JSX 的外层包裹一个小括号()，这样可以方便阅读，并且 jsx 可以进行换行书写")]),s._v(" "),a("li",[s._v("JSX 中的标签可以是单标签，也可以是双标签；如果是单标签，必须以"),a("code",[s._v("/>")]),s._v("结尾；")])]),s._v(" "),a("h2",{attrs:{id:"jsx-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx-语法"}},[s._v("#")]),s._v(" JSX 语法")]),s._v(" "),a("p",[s._v("JSX 注释")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* JSX的注释写法 */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("h2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("h2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("JSX 嵌入表达式")]),s._v(" "),a("ul",[a("li",[s._v("运算表达式")]),s._v(" "),a("li",[s._v("三元运算符")]),s._v(" "),a("li",[s._v("执行一个函数")])]),s._v(" "),a("p",[s._v("JSX 绑定属性")]),s._v(" "),a("ul",[a("li",[s._v("元素都会有 title 属性")]),s._v(" "),a("li",[s._v("img 元素会有 src 属性")]),s._v(" "),a("li",[s._v("a 元素会有 href 属性")]),s._v(" "),a("li",[s._v("元素可能需要绑定 class")]),s._v(" "),a("li",[s._v("原生使用内联样式 style")])]),s._v(" "),a("h2",{attrs:{id:"react-事件绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-事件绑定"}},[s._v("#")]),s._v(" React 事件绑定")]),s._v(" "),a("ul",[a("li",[s._v("React 事件的命名采用小驼峰式（camelCase），而不是纯小写")]),s._v(" "),a("li",[s._v("通过"),a("code",[s._v("{}")]),s._v("传入一个事件处理函数，这个函数会在事件发生时被执行；")])]),s._v(" "),a("h3",{attrs:{id:"相关-js-知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关-js-知识"}},[s._v("#")]),s._v(" 相关 js 知识")]),s._v(" "),a("p",[s._v("this 的四种绑定规则:")]),s._v(" "),a("ol",[a("li",[s._v("默认绑定 独立执行 foo()")]),s._v(" "),a("li",[s._v("隐式绑定 被一个对象执行 obj.foo() -> obj")]),s._v(" "),a("li",[s._v('显式绑定: call/apply/bind foo.call("aaa") -> String("aaa")')]),s._v(" "),a("li",[s._v("new 绑定: new Foo() -> 创建一个新对象, 并且赋值给 this")])]),s._v(" "),a("p",[s._v("super 和 constructor")]),s._v(" "),a("p",[s._v("super 关键字用于访问对象字面量或类的原型（[[Prototype]]）上的属性，或调用父类的构造函数。")]),s._v(" "),a("ol",[a("li",[s._v("作为“函数调用”"),a("code",[s._v("super(...args)")])]),s._v(" "),a("li",[s._v("作为“属性查询”"),a("code",[s._v("super.prop 和 super[expr]")])])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注意：在派生的类中，在你可以使用 'this' 之前，必须先调用 super()。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 然后使用 'this' 了，忽略 'this' 将导致引用错误（ReferenceError）")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("blockquote",[a("p",[s._v("在 JavaScript class 中，每次你定义其子类的构造函数时，都需要调用 super 方法。\n因此，在所有含有构造函数的的 React 组件中，构造函数必须以 super(props) 开头。")])]),s._v(" "),a("h2",{attrs:{id:"react-列表渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-列表渲染"}},[s._v("#")]),s._v(" React 列表渲染")]),s._v(" "),a("p",[s._v("在 React 中，没有 Vue 的模板语法，对 Js 的要求会更高，")]),s._v(" "),a("ul",[a("li",[s._v("展示列表最多的方式就是使用数组的 map 高阶函数，")]),s._v(" "),a("li",[s._v("过滤掉一些内容使用 filter 函数")]),s._v(" "),a("li",[s._v("截取数组中的一部分内容使用 slice 函数")])]),s._v(" "),a("p",[s._v("列表展示的 jsx 中也需要添加一个 key，目的是为了提高 diff 算法时的效率。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方法用一个固定值填充一个数组")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从起始索引到终止索引内的全部元素。不包括终止索引")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"数据的不可变性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据的不可变性"}},[s._v("#")]),s._v(" 数据的不可变性")]),s._v(" "),a("p",[s._v("一般来说改变数据有 2 种方式：")]),s._v(" "),a("ol",[a("li",[s._v("直接修改变量的值")]),s._v(" "),a("li",[s._v("是使用新的一份数据替换旧数据(不直接修改)")])]),s._v(" "),a("p",[s._v("最好使用不直接修改数据的方式，好处：")]),s._v(" "),a("ol",[a("li",[s._v("做撤销和恢复")]),s._v(" "),a("li",[s._v("追踪数据的改变")])])])}),[],!1,null,null,null);t.default=e.exports}}]);