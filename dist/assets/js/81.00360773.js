(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{538:function(v,_,e){"use strict";e.r(_);var l=e(21),i=Object(l.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"vue-js-介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-js-介绍"}},[v._v("#")]),v._v(" Vue.js 介绍")]),v._v(" "),e("h2",{attrs:{id:"编程模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编程模式"}},[v._v("#")]),v._v(" 编程模式")]),v._v(" "),e("ul",[e("li",[v._v("以前使用的编程范式，是命令式编程")]),v._v(" "),e("li",[v._v("使用 Vue 的编程范式，是声明式编程。")])]),v._v(" "),e("p",[v._v("使用构造函数的方式，传一个对象"),e("code",[v._v("{}")]),v._v("作为参数。")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("{}")]),v._v("包含"),e("code",[v._v("el")]),v._v("属性：该属性决定这个 Vue 对象挂载到哪个元素")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("{}")]),v._v("包含了"),e("code",[v._v("data")]),v._v("属性，该属性通常会存储一些数据")]),v._v(" "),e("ul",[e("li",[v._v("这些数据可以自定义")]),v._v(" "),e("li",[v._v("也可以是从服务器加载的")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("{}")]),v._v("包含了"),e("code",[v._v("methods")]),v._v("属性，该属性用于在 Vue 中定义新的方法")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("v-for")]),v._v("循环")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("v-on")]),v._v("监听事件")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("v-on:click")]),v._v("可以写成"),e("code",[v._v("@click")])])])]),v._v(" "),e("li",[e("p",[v._v("Vue 的实例中，如果想要获取 data 里的属性、methods 里面的方法，可以通过 this 来访问。")])]),v._v(" "),e("li",[e("p",[v._v("this 指向的是 Vue 的实例对象。")])])]),v._v(" "),e("h2",{attrs:{id:"vue-的两个特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-的两个特性"}},[v._v("#")]),v._v(" Vue 的两个特性")]),v._v(" "),e("ol",[e("li",[e("p",[e("strong",[v._v("数据驱动视图")]),v._v("：")]),v._v(" "),e("ul",[e("li",[v._v("数据的变化"),e("strong",[v._v("会驱动视图")]),v._v("自动更新")]),v._v(" "),e("li",[v._v("好处：程序员只管把数据维护好，那么页面结构会被 vue 自动渲染出来！")])])]),v._v(" "),e("li",[e("p",[e("strong",[v._v("双向数据绑定")]),v._v("：")]),v._v(" "),e("blockquote",[e("p",[v._v("在网页中，form 表单负责"),e("strong",[v._v("采集数据")]),v._v("，Ajax 负责"),e("strong",[v._v("提交数据")]),v._v("。")])]),v._v(" "),e("ul",[e("li",[v._v("js 数据的变化，会被自动渲染到页面上")]),v._v(" "),e("li",[v._v("页面上表单采集的数据发生变化的时候，会被 vue 自动获取到，并更新到 js 数据中")])])])]),v._v(" "),e("blockquote",[e("p",[v._v("注意：数据驱动视图和双向数据绑定的底层原理是 "),e("strong",[v._v("MVVM")]),v._v("（Mode 数据源、View 视图、ViewModel 就是 vue 的实例）")])]),v._v(" "),e("h2",{attrs:{id:"mvvm-模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvvm-模式"}},[v._v("#")]),v._v(" MVVM 模式")]),v._v(" "),e("p",[v._v("MVVM 指的是 Model、View 和 ViewModel。"),e("strong",[v._v("ViewModel")]),v._v(" 作为 MVVM 的核心，是它把当前页面的数据源（Model）和页面的结构（View）连接在了一起。")]),v._v(" "),e("ol",[e("li",[e("p",[e("code",[v._v("Model")])]),v._v(" "),e("ul",[e("li",[v._v("数据层，"),e("strong",[v._v("对应 data 中的数据")])]),v._v(" "),e("li",[v._v("可以是自已定义的数据，也可以来自于服务器在网络请求的数据")]),v._v(" "),e("li",[v._v("可定义数据修改和操作的业务逻辑 对应 JS 对象")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("View")])]),v._v(" "),e("ul",[e("li",[v._v("用户看到的视图层，"),e("strong",[v._v("对应 el 中的模板代码")])]),v._v(" "),e("li",[v._v("在前端开发中，通常就是 DOM 层")]),v._v(" "),e("li",[v._v("主要作用是给用户展示各种信息")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("view Model")])]),v._v(" "),e("ul",[e("li",[v._v("视图模型层，"),e("strong",[v._v("new Vue 实例")])]),v._v(" "),e("li",[v._v("是 View 和 Model 沟通的桥梁")]),v._v(" "),e("li",[v._v("一方面实现了"),e("code",[v._v("Data Bindings")]),v._v("（数据绑定），将 Model 的改变实时的反应到 View")]),v._v(" "),e("li",[v._v("另一方面它实现了"),e("code",[v._v("DOM Listener")]),v._v("（DOM 监听），当 DOM 发生一些事件（点击、滚动、touch 等）时，可以监听到，并在需要的情况下改变对应的 Data。")]),v._v(" "),e("li",[v._v("负责业务逻辑的处理（比如 Ajax 请求），对数据进行加工后交给视图展示 同步连接 V 和 M 的对象")])])])]),v._v(" "),e("p",[v._v("总结：")]),v._v(" "),e("ol",[e("li",[v._v("data 中所有的属性，最后都出现在 vm 身上")]),v._v(" "),e("li",[v._v("Vue 实例身上所有的属性及 Vue 原型上的所有属性，在 Vue 模板中都可以直接使用")])]),v._v(" "),e("ul",[e("li",[v._v("当"),e("strong",[v._v("Model 数据源")]),v._v("发生变化时，会被 ViewModel 监听到，VM 会根据最新的数据源自动更新页面的结构")]),v._v(" "),e("li",[v._v("当表单元素的值"),e("strong",[v._v("View")]),v._v("发生变化时，也会被 VM 监听到，VM 会把变化过后最新的值自动同步到 Model 数据源中")])]),v._v(" "),e("h2",{attrs:{id:"计数器中的-mvvm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计数器中的-mvvm"}},[v._v("#")]),v._v(" 计数器中的 MVVM")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("h1、button")]),v._v("标签就是"),e("code",[v._v("View")]),v._v("，就是 DOM")]),v._v(" "),e("li",[e("code",[v._v("data")]),v._v("这个对象的属性值就是"),e("code",[v._v("Model")]),v._v("，就是我们抽离出来的 obj")]),v._v(" "),e("li",[e("code",[v._v("new Vue()")]),v._v("就是"),e("code",[v._v("View Model")]),v._v("，我们创建的 Vue 实例")])]),v._v(" "),e("p",[v._v("工作流程：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("View Model")]),v._v("通过"),e("code",[v._v("Data Bindings")]),v._v("让 obj 的数据实时在 DOM 中显示。")]),v._v(" "),e("li",[v._v("View Model"),e("code",[v._v("通过")]),v._v("DOM Listener"),e("code",[v._v("来监听")]),v._v("methods 中的操作，来改变 obj 中的数据。")])]),v._v(" "),e("p",[v._v("好处：")]),v._v(" "),e("ul",[e("li",[v._v("Vue 可以帮助我们完成 Vue Model 层任务，避免手动操作 DOM 元素，让前端开发者有更多的时间去关注数据的业务逻辑处理。")])]),v._v(" "),e("h2",{attrs:{id:"创建-vue-实例传入的-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建-vue-实例传入的-options"}},[v._v("#")]),v._v(" 创建 Vue 实例传入的 options")]),v._v(" "),e("p",[v._v("最基础的 options")]),v._v(" "),e("ul",[e("li",[v._v("el\n"),e("ul",[e("li",[v._v("类型：string | HTMLElement")]),v._v(" "),e("li",[v._v("决定之后的 Vue 实例会管理哪个 DOM")])])]),v._v(" "),e("li",[v._v("data\n"),e("ul",[e("li",[v._v("类型：Object | Function（组件当中时，data 必须是函数）")]),v._v(" "),e("li",[v._v("Vue 实例对应的数据类型")])])]),v._v(" "),e("li",[v._v("methods\n"),e("ul",[e("li",[v._v("类型：{[key:string]:Function}")]),v._v(" "),e("li",[v._v("定义属于 Vue 的一些方法，可以在其他地方调用，也可以在指令中调用")]),v._v(" "),e("li",[v._v("methods 中的函数不能使用箭头函数。箭头函数没有自己的 this，指向外层作用域，js 中"),e("code",[v._v("{}")]),v._v("并不是块级作用域，而是对象，所有会一直指向 Window。")])])]),v._v(" "),e("li",[v._v("Vue 的生命周期函数(钩子)")])])])}),[],!1,null,null,null);_.default=i.exports}}]);